name: package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # This fetch element is only important if you are use SCM based
          # versioning (that looks at git tags to gather the version).
          # setuptools-scm needs tags to form a valid version number
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          # You can modify what version of Python you want to use for your release
          python-version: "3.12"

      - name: Install hatch
        uses: pypa/hatch@a3c83ab3d481fbc2dc91dd0088628817488dd1d5

      - name: Build package using Hatch
        run: |
          hatch build
          echo ""
          echo "Generated files:"
          ls -lh dist/

      # Store an artifact of the build to use in the publish step below
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          if-no-files-found: error
  publish:
    name: Publish to PyPI
    needs:
      - build
    runs-on: ubuntu-latest
    # Environment required here for trusted publisher
    environment:
      name: pypi
      url: https://pypi.org/p/figshare-get
    permissions:
      id-token: write # this permission is mandatory for PyPI publishing
    steps:
      - name: Download dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          merge-multiple: true
      - name: Publish package to PyPI
        # Only publish to real PyPI on release
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: pypa/gh-action-pypi-publish@release/v1
